"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SnapshotPeriod = exports.CIRCUIT_BREAKER_FRAGMENT = exports.CLAIM_FRAGMENT = exports.CLAIM_ADDED_FRAGMENT = exports.LIQUIDITY_WITHDRAWAL_FRAGMENT = exports.LIQUIDITY_DEPOSIT_FRAGMENT = exports.STRIKE_IV_AND_GREEKS_SNAPSHOT_FRAGMENT = exports.OPTION_VOLUME_FRAGMENT = exports.OPTION_PRICE_AND_GREEKS_SNAPSHOT_FRAGMENT = exports.SHORT_OPTION_FRAGMENT = exports.LONG_OPTION_FRAGMENT = exports.SPOT_PRICE_SNAPSHOT_FRAGMENT = exports.MARKET_PENDING_LIQUIDITY_SNAPSHOT_FRAGMENT = exports.MARKET_VOLUME_AND_FEES_SNAPSHOT_FRAGMENT = exports.MARKET_GREEKS_SNAPSHOT_FRAGMENT = exports.MARKET_TOTAL_VALUE_SNAPSHOT_FRAGMENT = exports.POSITION_QUERY_FRAGMENT = exports.TRANSFER_QUERY_FRAGMENT = exports.SETTLE_QUERY_FRAGMENT = exports.COLLATERAL_UPDATE_QUERY_FRAGMENT = exports.TRADE_QUERY_FRAGMENT = exports.SNAPSHOT_RESULT_LIMIT = exports.MAX_END_TIMESTAMP = exports.MIN_START_TIMESTAMP = void 0;
exports.MIN_START_TIMESTAMP = 0;
exports.MAX_END_TIMESTAMP = 2147483647;
exports.SNAPSHOT_RESULT_LIMIT = 1000;
exports.TRADE_QUERY_FRAGMENT = "\ntimestamp\nblockNumber\ntransactionHash\ntrader\nsize\nisOpen\nisBuy\nspotPrice\npremium\nspotPriceFee\noptionPriceFee\nvegaUtilFee\nvarianceFee\nexternalSwapFees\nsetCollateralTo\nnewIv\nnewBaseIv\nnewSkew\nvolTraded\nisForceClose\nisLiquidation\nstrike {\n  strikeId\n  strikePrice\n}\nboard {\n  expiryTimestamp\n}\nmarket {\n  name\n  id\n}\noption {\n  isCall\n}\nposition {\n  positionId\n  isLong\n  isBaseCollateral\n}\n";
exports.COLLATERAL_UPDATE_QUERY_FRAGMENT = "\ntimestamp\ntrader\nblockNumber\ntransactionHash\namount\nisBaseCollateral\nspotPrice\nstrike {\n  strikeId\n  strikePrice\n}\nboard {\n  expiryTimestamp\n}\nmarket {\n  name\n  id\n}\noption {\n  isCall\n}\nposition {\n  positionId\n  isLong\n  isBaseCollateral\n}\n";
exports.SETTLE_QUERY_FRAGMENT = "\nid\nblockNumber\nprofit\nsize\nspotPriceAtExpiry\ntimestamp\ntransactionHash\nowner\nsettleAmount\nposition {\n  positionId\n  isBaseCollateral\n  isLong\n  strike {\n    strikeId\n    strikePrice\n  }\n  board {\n    expiryTimestamp\n  }\n  market {\n    name\n    id\n    latestSpotPrice\n  }\n  option {\n    isCall\n  }\n}\n";
exports.TRANSFER_QUERY_FRAGMENT = "\n  oldOwner\n  newOwner\n  transactionHash\n  blockNumber\n  position {\n    id\n    positionId\n  }\n";
exports.POSITION_QUERY_FRAGMENT = "\nid\npositionId\nowner\nsize\nisLong\ncollateral\nisBaseCollateral\nstate\nopenTimestamp\ncloseTimestamp\nstrike {\n  strikeId\n  strikePrice\n}\nboard {\n  boardId\n  expiryTimestamp\n  spotPriceAtExpiry\n}\nmarket {\n  name\n  id\n  latestSpotPrice\n}\noption {\n  isCall\n  latestOptionPriceAndGreeks {\n    optionPrice\n  }\n}\ntrades(orderBy: timestamp, orderDirection: asc) {\n  ".concat(exports.TRADE_QUERY_FRAGMENT, "\n}\ncollateralUpdates(orderBy: timestamp, orderDirection: asc) {\n  ").concat(exports.COLLATERAL_UPDATE_QUERY_FRAGMENT, "\n}\ntransfers(orderBy: timestamp, orderDirection: asc) {\n  ").concat(exports.TRANSFER_QUERY_FRAGMENT, "\n}\nsettle {\n  ").concat(exports.SETTLE_QUERY_FRAGMENT, "\n}\n");
exports.MARKET_TOTAL_VALUE_SNAPSHOT_FRAGMENT = "\n  id\n  period\n  timestamp\n  tokenPrice\n  freeLiquidity\n  burnableLiquidity\n  usedCollatLiquidity\n  pendingDeltaLiquidity\n  usedDeltaLiquidity\n  NAV\n  netOptionValue\n  pendingDeposits\n  pendingWithdrawals\n";
exports.MARKET_GREEKS_SNAPSHOT_FRAGMENT = "\n  id\n  period\n  timestamp\n  netDelta\n  poolNetDelta\n  hedgerNetDelta\n  netStdVega\n";
exports.MARKET_VOLUME_AND_FEES_SNAPSHOT_FRAGMENT = "\n  id\n  timestamp\n  period\n  premiumVolume\n  notionalVolume\n  totalPremiumVolume\n  totalNotionalVolume\n  spotPriceFees\n  optionPriceFees\n  vegaFees\n  varianceFees\n  deltaCutoffFees\n  liquidatorFees\n  smLiquidationFees\n  lpLiquidationFees\n  totalShortPutOpenInterestUSD\n  totalShortCallOpenInterestUSD\n";
exports.MARKET_PENDING_LIQUIDITY_SNAPSHOT_FRAGMENT = "\n  id\n  period\n  timestamp\n  pendingDepositAmount\n  pendingWithdrawalAmount\n";
exports.SPOT_PRICE_SNAPSHOT_FRAGMENT = "\n  timestamp\n  spotPrice\n  open\n  high\n  low\n  close\n  blockNumber\n  period\n";
exports.LONG_OPTION_FRAGMENT = "\n  option {\n    id\n    isCall\n    optionPriceAndGreeksHistory(\n      first: 1000,\n      orderBy: timestamp,\n      orderDirection: desc,\n      where: {\n        timestamp_gte: $startTimestamp,\n        period_gte: $period\n      }\n    ) {\n      id\n      timestamp\n      optionPrice\n    }\n  }\n  id\n  openTimestamp\n  closeTimestamp\n  size\n  collateral\n  trades(\n    first: 1000,\n    orderBy: timestamp,\n    orderDirection: desc,\n  ) {\n    timestamp\n    isBuy\n    size\n    premium\n    blockNumber\n    transactionHash\n    collateralUpdate {\n      timestamp\n      amount\n    }\n  }\n";
exports.SHORT_OPTION_FRAGMENT = "\n  ".concat(exports.LONG_OPTION_FRAGMENT, "\n  collateralUpdates(\n    first: 1000,\n    orderBy: timestamp,\n    orderDirection: desc,\n  ) {\n    id\n    timestamp\n    amount\n  }\n");
exports.OPTION_PRICE_AND_GREEKS_SNAPSHOT_FRAGMENT = "\n  timestamp\n  blockTimestamp\n  optionPrice\n  id\n  blockNumber\n  option {\n    id\n  }\n";
exports.OPTION_VOLUME_FRAGMENT = "\n  notionalVolume\n  premiumVolume\n  timestamp\n";
exports.STRIKE_IV_AND_GREEKS_SNAPSHOT_FRAGMENT = "\n  timestamp\n  iv\n";
exports.LIQUIDITY_DEPOSIT_FRAGMENT = "\n  pool {\n    market {\n      id\n    }\n    cbEvents(first:1, orderBy:cbTimestamp, orderDirection:desc) {\n      cbTimestamp\n      ivVarianceCrossed\n      skewVarianceCrossed\n      liquidityVarianceCrossed\n    }\n  }\n  user\n  pendingDepositsAndWithdrawals(where: {\n    isDeposit: true\n  }) {\n    id\n    queueID\n    pendingAmount\n    processedAmount\n    timestamp\n    transactionHash\n  }\n  depositsAndWithdrawals(where: {\n    isDeposit: true\n  }) {\n    id\n    queueID\n    quoteAmount\n    tokenAmount\n    tokenPrice\n    timestamp\n    transactionHash\n  }\n";
exports.LIQUIDITY_WITHDRAWAL_FRAGMENT = "\n  pool {\n    market {\n      id\n    }\n  }\n  user\n  pendingDepositsAndWithdrawals(where: {\n    isDeposit: false\n  }) {\n    id\n    queueID\n    pendingAmount\n    processedAmount\n    timestamp\n    transactionHash\n  }\n  depositsAndWithdrawals(where: {\n    isDeposit: false\n  }) {\n    id\n    queueID\n    quoteAmount\n    tokenAmount\n    tokenPrice\n    timestamp\n    transactionHash\n  }\n";
exports.CLAIM_ADDED_FRAGMENT = "\n  amount\n  blockNumber\n  claimer\n  epochTimestamp\n  rewardToken\n  tag\n  timestamp\n";
exports.CLAIM_FRAGMENT = "\n  amount\n  blockNumber\n  claimer\n  rewardToken\n  timestamp\n";
exports.CIRCUIT_BREAKER_FRAGMENT = "\n  cbTimestamp\n  ivVarianceCrossed\n  skewVarianceCrossed\n  liquidityVarianceCrossed\n";
var SnapshotPeriod;
(function (SnapshotPeriod) {
    SnapshotPeriod[SnapshotPeriod["FifteenMinutes"] = 900] = "FifteenMinutes";
    SnapshotPeriod[SnapshotPeriod["OneHour"] = 3600] = "OneHour";
    SnapshotPeriod[SnapshotPeriod["FourHours"] = 14400] = "FourHours";
    SnapshotPeriod[SnapshotPeriod["EightHours"] = 28800] = "EightHours";
    SnapshotPeriod[SnapshotPeriod["OneDay"] = 86400] = "OneDay";
    SnapshotPeriod[SnapshotPeriod["SevenDays"] = 604800] = "SevenDays";
})(SnapshotPeriod = exports.SnapshotPeriod || (exports.SnapshotPeriod = {}));
//# sourceMappingURL=queries.js.map