import { BigNumber } from '@ethersproject/bignumber';
import { TransactionReceipt } from '@ethersproject/providers';
import Lyra, { Position } from '..';
import { DataSource } from '../constants/contracts';
export type SettleEventData = {
    source: DataSource;
    blockNumber: number;
    timestamp: number;
    transactionHash: string;
    positionId: number;
    spotPriceAtExpiry: BigNumber;
    owner: string;
    size: BigNumber;
    marketName: string;
    marketAddress: string;
    expiryTimestamp: number;
    strikePrice: BigNumber;
    isCall: boolean;
    isLong: boolean;
    isBaseCollateral: boolean;
    settlement: BigNumber;
    returnedCollateralAmount: BigNumber;
    returnedCollateralValue: BigNumber;
    isInTheMoney: boolean;
};
export declare class SettleEvent {
    private __settleData;
    __source: DataSource;
    lyra: Lyra;
    blockNumber: number;
    positionId: number;
    spotPriceAtExpiry: BigNumber;
    timestamp: number;
    transactionHash: string;
    owner: string;
    size: BigNumber;
    marketName: string;
    marketAddress: string;
    expiryTimestamp: number;
    strikePrice: BigNumber;
    isCall: boolean;
    isLong: boolean;
    isBaseCollateral: boolean;
    settlement: BigNumber;
    returnedCollateralAmount: BigNumber;
    returnedCollateralValue: BigNumber;
    isInTheMoney: boolean;
    constructor(lyra: Lyra, settle: SettleEventData);
    static getByHash(lyra: Lyra, transactionHashOrReceipt: string | TransactionReceipt): Promise<SettleEvent[]>;
    pnl(position: Position): BigNumber;
    position(): Promise<Position>;
}
